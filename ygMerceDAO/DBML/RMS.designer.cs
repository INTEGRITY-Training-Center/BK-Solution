#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ygMerceDAO.DBML
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RMS")]
	public partial class RMSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBKCustomer(BKCustomer instance);
    partial void UpdateBKCustomer(BKCustomer instance);
    partial void DeleteBKCustomer(BKCustomer instance);
    partial void Insertbrand(brand instance);
    partial void Updatebrand(brand instance);
    partial void Deletebrand(brand instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertCell_Price(Cell_Price instance);
    partial void UpdateCell_Price(Cell_Price instance);
    partial void DeleteCell_Price(Cell_Price instance);
    partial void InsertCell_Price_History(Cell_Price_History instance);
    partial void UpdateCell_Price_History(Cell_Price_History instance);
    partial void DeleteCell_Price_History(Cell_Price_History instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void Insertinventory(inventory instance);
    partial void Updateinventory(inventory instance);
    partial void Deleteinventory(inventory instance);
    partial void Insertinventory_history(inventory_history instance);
    partial void Updateinventory_history(inventory_history instance);
    partial void Deleteinventory_history(inventory_history instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertInvoice_History(Invoice_History instance);
    partial void UpdateInvoice_History(Invoice_History instance);
    partial void DeleteInvoice_History(Invoice_History instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void Insertproduct_history(product_history instance);
    partial void Updateproduct_history(product_history instance);
    partial void Deleteproduct_history(product_history instance);
    partial void Insertproduct_image(product_image instance);
    partial void Updateproduct_image(product_image instance);
    partial void Deleteproduct_image(product_image instance);
    partial void Insertproduct_image1(product_image1 instance);
    partial void Updateproduct_image1(product_image1 instance);
    partial void Deleteproduct_image1(product_image1 instance);
    partial void InsertPurchase(Purchase instance);
    partial void UpdatePurchase(Purchase instance);
    partial void DeletePurchase(Purchase instance);
    partial void InsertQuarter(Quarter instance);
    partial void UpdateQuarter(Quarter instance);
    partial void DeleteQuarter(Quarter instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertRegister(Register instance);
    partial void UpdateRegister(Register instance);
    partial void DeleteRegister(Register instance);
    partial void InsertReorder(Reorder instance);
    partial void UpdateReorder(Reorder instance);
    partial void DeleteReorder(Reorder instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertSubCategory(SubCategory instance);
    partial void UpdateSubCategory(SubCategory instance);
    partial void DeleteSubCategory(SubCategory instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertTownship(Township instance);
    partial void UpdateTownship(Township instance);
    partial void DeleteTownship(Township instance);
    partial void InsertUnitOfMeasure(UnitOfMeasure instance);
    partial void UpdateUnitOfMeasure(UnitOfMeasure instance);
    partial void DeleteUnitOfMeasure(UnitOfMeasure instance);
    partial void InsertBK_Product(BK_Product instance);
    partial void UpdateBK_Product(BK_Product instance);
    partial void DeleteBK_Product(BK_Product instance);
    #endregion
		
		public RMSDataContext() : 
				base(global::ygMerceDAO.Properties.Settings.Default.RMSConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public RMSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RMSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BKCustomer> BKCustomers
		{
			get
			{
				return this.GetTable<BKCustomer>();
			}
		}
		
		public System.Data.Linq.Table<brand> brands
		{
			get
			{
				return this.GetTable<brand>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Cell_Price> Cell_Prices
		{
			get
			{
				return this.GetTable<Cell_Price>();
			}
		}
		
		public System.Data.Linq.Table<Cell_Price_History> Cell_Price_Histories
		{
			get
			{
				return this.GetTable<Cell_Price_History>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<inventory> inventories
		{
			get
			{
				return this.GetTable<inventory>();
			}
		}
		
		public System.Data.Linq.Table<inventory_history> inventory_histories
		{
			get
			{
				return this.GetTable<inventory_history>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<Invoice_History> Invoice_Histories
		{
			get
			{
				return this.GetTable<Invoice_History>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<product_history> product_histories
		{
			get
			{
				return this.GetTable<product_history>();
			}
		}
		
		public System.Data.Linq.Table<product_image> product_images
		{
			get
			{
				return this.GetTable<product_image>();
			}
		}
		
		public System.Data.Linq.Table<product_image1> product_image1s
		{
			get
			{
				return this.GetTable<product_image1>();
			}
		}
		
		public System.Data.Linq.Table<Purchase> Purchases
		{
			get
			{
				return this.GetTable<Purchase>();
			}
		}
		
		public System.Data.Linq.Table<Quarter> Quarters
		{
			get
			{
				return this.GetTable<Quarter>();
			}
		}
		
		public System.Data.Linq.Table<Region> Regions
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<Register> Registers
		{
			get
			{
				return this.GetTable<Register>();
			}
		}
		
		public System.Data.Linq.Table<Reorder> Reorders
		{
			get
			{
				return this.GetTable<Reorder>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<SubCategory> SubCategories
		{
			get
			{
				return this.GetTable<SubCategory>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<Township> Townships
		{
			get
			{
				return this.GetTable<Township>();
			}
		}
		
		public System.Data.Linq.Table<UnitOfMeasure> UnitOfMeasures
		{
			get
			{
				return this.GetTable<UnitOfMeasure>();
			}
		}
		
		public System.Data.Linq.Table<BK_Product> BK_Products
		{
			get
			{
				return this.GetTable<BK_Product>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BKCustomer")]
	public partial class BKCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private string _Customercode;
		
		private string _Name;
		
		private string _TownshipID;
		
		private string _Contact;
		
		private string _Address;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
		private string _CustomerPassword;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnCustomercodeChanging(string value);
    partial void OnCustomercodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTownshipIDChanging(string value);
    partial void OnTownshipIDChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnCustomerPasswordChanging(string value);
    partial void OnCustomerPasswordChanged();
    #endregion
		
		public BKCustomer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customercode", AutoSync=AutoSync.Always, DbType="VarChar(9)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string Customercode
		{
			get
			{
				return this._Customercode;
			}
			set
			{
				if ((this._Customercode != value))
				{
					this.OnCustomercodeChanging(value);
					this.SendPropertyChanging();
					this._Customercode = value;
					this.SendPropertyChanged("Customercode");
					this.OnCustomercodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TownshipID", DbType="Char(36)")]
		public string TownshipID
		{
			get
			{
				return this._TownshipID;
			}
			set
			{
				if ((this._TownshipID != value))
				{
					this.OnTownshipIDChanging(value);
					this.SendPropertyChanging();
					this._TownshipID = value;
					this.SendPropertyChanged("TownshipID");
					this.OnTownshipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPassword", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CustomerPassword
		{
			get
			{
				return this._CustomerPassword;
			}
			set
			{
				if ((this._CustomerPassword != value))
				{
					this.OnCustomerPasswordChanging(value);
					this.SendPropertyChanging();
					this._CustomerPassword = value;
					this.SendPropertyChanged("CustomerPassword");
					this.OnCustomerPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.brand")]
	public partial class brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BrandID;
		
		private string _BrandName;
		
		private string _Model;
		
		private string _CategoryID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrandIDChanging(string value);
    partial void OnBrandIDChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnCategoryIDChanging(string value);
    partial void OnCategoryIDChanged();
    #endregion
		
		public brand()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Char(36) NOT NULL", CanBeNull=false)]
		public string CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CategoryID;
		
		private string _Type;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(string value);
    partial void OnCategoryIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Category()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cell_Price")]
	public partial class Cell_Price : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _Product_id;
		
		private decimal _Cell_Price1;
		
		private decimal _Cell_Price2;
		
		private System.DateTime _Insert_Date;
		
		private System.DateTime _Update_Date;
		
		private string _UMID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnProduct_idChanging(string value);
    partial void OnProduct_idChanged();
    partial void OnCell_Price1Changing(decimal value);
    partial void OnCell_Price1Changed();
    partial void OnCell_Price2Changing(decimal value);
    partial void OnCell_Price2Changed();
    partial void OnInsert_DateChanging(System.DateTime value);
    partial void OnInsert_DateChanged();
    partial void OnUpdate_DateChanging(System.DateTime value);
    partial void OnUpdate_DateChanged();
    partial void OnUMIDChanging(string value);
    partial void OnUMIDChanged();
    #endregion
		
		public Cell_Price()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_id", DbType="Char(36)")]
		public string Product_id
		{
			get
			{
				return this._Product_id;
			}
			set
			{
				if ((this._Product_id != value))
				{
					this.OnProduct_idChanging(value);
					this.SendPropertyChanging();
					this._Product_id = value;
					this.SendPropertyChanged("Product_id");
					this.OnProduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cell_Price1", DbType="Decimal(18,0) NOT NULL")]
		public decimal Cell_Price1
		{
			get
			{
				return this._Cell_Price1;
			}
			set
			{
				if ((this._Cell_Price1 != value))
				{
					this.OnCell_Price1Changing(value);
					this.SendPropertyChanging();
					this._Cell_Price1 = value;
					this.SendPropertyChanged("Cell_Price1");
					this.OnCell_Price1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cell_Price2", DbType="Decimal(18,0) NOT NULL")]
		public decimal Cell_Price2
		{
			get
			{
				return this._Cell_Price2;
			}
			set
			{
				if ((this._Cell_Price2 != value))
				{
					this.OnCell_Price2Changing(value);
					this.SendPropertyChanging();
					this._Cell_Price2 = value;
					this.SendPropertyChanged("Cell_Price2");
					this.OnCell_Price2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insert_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Insert_Date
		{
			get
			{
				return this._Insert_Date;
			}
			set
			{
				if ((this._Insert_Date != value))
				{
					this.OnInsert_DateChanging(value);
					this.SendPropertyChanging();
					this._Insert_Date = value;
					this.SendPropertyChanged("Insert_Date");
					this.OnInsert_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Update_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Update_Date
		{
			get
			{
				return this._Update_Date;
			}
			set
			{
				if ((this._Update_Date != value))
				{
					this.OnUpdate_DateChanging(value);
					this.SendPropertyChanging();
					this._Update_Date = value;
					this.SendPropertyChanged("Update_Date");
					this.OnUpdate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UMID", DbType="Char(36) NOT NULL", CanBeNull=false)]
		public string UMID
		{
			get
			{
				return this._UMID;
			}
			set
			{
				if ((this._UMID != value))
				{
					this.OnUMIDChanging(value);
					this.SendPropertyChanging();
					this._UMID = value;
					this.SendPropertyChanged("UMID");
					this.OnUMIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cell_Price_History")]
	public partial class Cell_Price_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _Product_id;
		
		private decimal _Cell_Price1;
		
		private decimal _Cell_Price2;
		
		private string _Un_Mid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnProduct_idChanging(string value);
    partial void OnProduct_idChanged();
    partial void OnCell_Price1Changing(decimal value);
    partial void OnCell_Price1Changed();
    partial void OnCell_Price2Changing(decimal value);
    partial void OnCell_Price2Changed();
    partial void OnUn_MidChanging(string value);
    partial void OnUn_MidChanged();
    #endregion
		
		public Cell_Price_History()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_id", DbType="Char(36)")]
		public string Product_id
		{
			get
			{
				return this._Product_id;
			}
			set
			{
				if ((this._Product_id != value))
				{
					this.OnProduct_idChanging(value);
					this.SendPropertyChanging();
					this._Product_id = value;
					this.SendPropertyChanged("Product_id");
					this.OnProduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cell_Price1", DbType="Decimal(18,0) NOT NULL")]
		public decimal Cell_Price1
		{
			get
			{
				return this._Cell_Price1;
			}
			set
			{
				if ((this._Cell_Price1 != value))
				{
					this.OnCell_Price1Changing(value);
					this.SendPropertyChanging();
					this._Cell_Price1 = value;
					this.SendPropertyChanged("Cell_Price1");
					this.OnCell_Price1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cell_Price2", DbType="Decimal(18,0) NOT NULL")]
		public decimal Cell_Price2
		{
			get
			{
				return this._Cell_Price2;
			}
			set
			{
				if ((this._Cell_Price2 != value))
				{
					this.OnCell_Price2Changing(value);
					this.SendPropertyChanging();
					this._Cell_Price2 = value;
					this.SendPropertyChanged("Cell_Price2");
					this.OnCell_Price2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Un_Mid", DbType="Char(36)")]
		public string Un_Mid
		{
			get
			{
				return this._Un_Mid;
			}
			set
			{
				if ((this._Un_Mid != value))
				{
					this.OnUn_MidChanging(value);
					this.SendPropertyChanging();
					this._Un_Mid = value;
					this.SendPropertyChanged("Un_Mid");
					this.OnUn_MidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CityID;
		
		private string _City_Name;
		
		private string _City_Descripion;
		
		private string _State_DivisionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIDChanging(string value);
    partial void OnCityIDChanged();
    partial void OnCity_NameChanging(string value);
    partial void OnCity_NameChanged();
    partial void OnCity_DescripionChanging(string value);
    partial void OnCity_DescripionChanged();
    partial void OnState_DivisionIDChanging(string value);
    partial void OnState_DivisionIDChanged();
    #endregion
		
		public City()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[City Name]", Storage="_City_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string City_Name
		{
			get
			{
				return this._City_Name;
			}
			set
			{
				if ((this._City_Name != value))
				{
					this.OnCity_NameChanging(value);
					this.SendPropertyChanging();
					this._City_Name = value;
					this.SendPropertyChanged("City_Name");
					this.OnCity_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[City Descripion]", Storage="_City_Descripion", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string City_Descripion
		{
			get
			{
				return this._City_Descripion;
			}
			set
			{
				if ((this._City_Descripion != value))
				{
					this.OnCity_DescripionChanging(value);
					this.SendPropertyChanging();
					this._City_Descripion = value;
					this.SendPropertyChanged("City_Descripion");
					this.OnCity_DescripionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State/DivisionID]", Storage="_State_DivisionID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string State_DivisionID
		{
			get
			{
				return this._State_DivisionID;
			}
			set
			{
				if ((this._State_DivisionID != value))
				{
					this.OnState_DivisionIDChanging(value);
					this.SendPropertyChanging();
					this._State_DivisionID = value;
					this.SendPropertyChanged("State_DivisionID");
					this.OnState_DivisionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CountryID;
		
		private string _Country_Name;
		
		private string _Country_Code;
		
		private string _Country_Description;
		
		private string _RegionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(string value);
    partial void OnCountryIDChanged();
    partial void OnCountry_NameChanging(string value);
    partial void OnCountry_NameChanged();
    partial void OnCountry_CodeChanging(string value);
    partial void OnCountry_CodeChanged();
    partial void OnCountry_DescriptionChanging(string value);
    partial void OnCountry_DescriptionChanged();
    partial void OnRegionIDChanging(string value);
    partial void OnRegionIDChanged();
    #endregion
		
		public Country()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Country Name]", Storage="_Country_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Country_Name
		{
			get
			{
				return this._Country_Name;
			}
			set
			{
				if ((this._Country_Name != value))
				{
					this.OnCountry_NameChanging(value);
					this.SendPropertyChanging();
					this._Country_Name = value;
					this.SendPropertyChanged("Country_Name");
					this.OnCountry_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Country Code]", Storage="_Country_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Country_Code
		{
			get
			{
				return this._Country_Code;
			}
			set
			{
				if ((this._Country_Code != value))
				{
					this.OnCountry_CodeChanging(value);
					this.SendPropertyChanging();
					this._Country_Code = value;
					this.SendPropertyChanged("Country_Code");
					this.OnCountry_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Country Description]", Storage="_Country_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Country_Description
		{
			get
			{
				return this._Country_Description;
			}
			set
			{
				if ((this._Country_Description != value))
				{
					this.OnCountry_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Country_Description = value;
					this.SendPropertyChanged("Country_Description");
					this.OnCountry_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerID;
		
		private string _Customercode;
		
		private string _Name;
		
		private string _TownshipID;
		
		private int _Contact;
		
		private string _Address;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnCustomercodeChanging(string value);
    partial void OnCustomercodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTownshipIDChanging(string value);
    partial void OnTownshipIDChanged();
    partial void OnContactChanging(int value);
    partial void OnContactChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Char(35) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customercode", DbType="VarChar(50)")]
		public string Customercode
		{
			get
			{
				return this._Customercode;
			}
			set
			{
				if ((this._Customercode != value))
				{
					this.OnCustomercodeChanging(value);
					this.SendPropertyChanging();
					this._Customercode = value;
					this.SendPropertyChanged("Customercode");
					this.OnCustomercodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TownshipID", DbType="Char(36)")]
		public string TownshipID
		{
			get
			{
				return this._TownshipID;
			}
			set
			{
				if ((this._TownshipID != value))
				{
					this.OnTownshipIDChanging(value);
					this.SendPropertyChanging();
					this._TownshipID = value;
					this.SendPropertyChanged("TownshipID");
					this.OnTownshipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="Int NOT NULL")]
		public int Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventory")]
	public partial class inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InventoryID;
		
		private string _ProductID;
		
		private System.DateTime _Inserted_date;
		
		private System.DateTime _Updated_date;
		
		private int _UnitInStock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInventoryIDChanging(string value);
    partial void OnInventoryIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnInserted_dateChanging(System.DateTime value);
    partial void OnInserted_dateChanged();
    partial void OnUpdated_dateChanging(System.DateTime value);
    partial void OnUpdated_dateChanged();
    partial void OnUnitInStockChanging(int value);
    partial void OnUnitInStockChanged();
    #endregion
		
		public inventory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					this.OnInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryID");
					this.OnInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inserted_date", DbType="DateTime NOT NULL")]
		public System.DateTime Inserted_date
		{
			get
			{
				return this._Inserted_date;
			}
			set
			{
				if ((this._Inserted_date != value))
				{
					this.OnInserted_dateChanging(value);
					this.SendPropertyChanging();
					this._Inserted_date = value;
					this.SendPropertyChanged("Inserted_date");
					this.OnInserted_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_date", DbType="DateTime NOT NULL")]
		public System.DateTime Updated_date
		{
			get
			{
				return this._Updated_date;
			}
			set
			{
				if ((this._Updated_date != value))
				{
					this.OnUpdated_dateChanging(value);
					this.SendPropertyChanging();
					this._Updated_date = value;
					this.SendPropertyChanged("Updated_date");
					this.OnUpdated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitInStock", DbType="Int NOT NULL")]
		public int UnitInStock
		{
			get
			{
				return this._UnitInStock;
			}
			set
			{
				if ((this._UnitInStock != value))
				{
					this.OnUnitInStockChanging(value);
					this.SendPropertyChanging();
					this._UnitInStock = value;
					this.SendPropertyChanged("UnitInStock");
					this.OnUnitInStockChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventory_history")]
	public partial class inventory_history : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InventoryID;
		
		private string _ProductID;
		
		private string _Product_quantity;
		
		private string _Inserted_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInventoryIDChanging(string value);
    partial void OnInventoryIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnProduct_quantityChanging(string value);
    partial void OnProduct_quantityChanged();
    partial void OnInserted_dateChanging(string value);
    partial void OnInserted_dateChanged();
    #endregion
		
		public inventory_history()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					this.OnInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryID");
					this.OnInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_quantity", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Product_quantity
		{
			get
			{
				return this._Product_quantity;
			}
			set
			{
				if ((this._Product_quantity != value))
				{
					this.OnProduct_quantityChanging(value);
					this.SendPropertyChanging();
					this._Product_quantity = value;
					this.SendPropertyChanged("Product_quantity");
					this.OnProduct_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inserted_date", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Inserted_date
		{
			get
			{
				return this._Inserted_date;
			}
			set
			{
				if ((this._Inserted_date != value))
				{
					this.OnInserted_dateChanging(value);
					this.SendPropertyChanging();
					this._Inserted_date = value;
					this.SendPropertyChanged("Inserted_date");
					this.OnInserted_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InvoiceID;
		
		private string _No;
		
		private string _ProductName;
		
		private string _Qty;
		
		private string _Price;
		
		private string _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(string value);
    partial void OnInvoiceIDChanged();
    partial void OnNoChanging(string value);
    partial void OnNoChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnQtyChanging(string value);
    partial void OnQtyChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    #endregion
		
		public Invoice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Invoice History]")]
	public partial class Invoice_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InvoiceID;
		
		private string _No;
		
		private string _ProductName;
		
		private string _Qty;
		
		private string _Price;
		
		private string _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(string value);
    partial void OnInvoiceIDChanged();
    partial void OnNoChanging(string value);
    partial void OnNoChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnQtyChanging(string value);
    partial void OnQtyChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    #endregion
		
		public Invoice_History()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PersonID;
		
		private string _Person_Father_s_Name;
		
		private string _Person_NRC;
		
		private string _Street_Address;
		
		private string _QuarterID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonIDChanging(string value);
    partial void OnPersonIDChanged();
    partial void OnPerson_Father_s_NameChanging(string value);
    partial void OnPerson_Father_s_NameChanged();
    partial void OnPerson_NRCChanging(string value);
    partial void OnPerson_NRCChanged();
    partial void OnStreet_AddressChanging(string value);
    partial void OnStreet_AddressChanged();
    partial void OnQuarterIDChanging(string value);
    partial void OnQuarterIDChanged();
    #endregion
		
		public Person()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Person Father\'s Name]", Storage="_Person_Father_s_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Person_Father_s_Name
		{
			get
			{
				return this._Person_Father_s_Name;
			}
			set
			{
				if ((this._Person_Father_s_Name != value))
				{
					this.OnPerson_Father_s_NameChanging(value);
					this.SendPropertyChanging();
					this._Person_Father_s_Name = value;
					this.SendPropertyChanged("Person_Father_s_Name");
					this.OnPerson_Father_s_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Person NRC]", Storage="_Person_NRC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Person_NRC
		{
			get
			{
				return this._Person_NRC;
			}
			set
			{
				if ((this._Person_NRC != value))
				{
					this.OnPerson_NRCChanging(value);
					this.SendPropertyChanging();
					this._Person_NRC = value;
					this.SendPropertyChanged("Person_NRC");
					this.OnPerson_NRCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Street Address]", Storage="_Street_Address", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Street_Address
		{
			get
			{
				return this._Street_Address;
			}
			set
			{
				if ((this._Street_Address != value))
				{
					this.OnStreet_AddressChanging(value);
					this.SendPropertyChanging();
					this._Street_Address = value;
					this.SendPropertyChanged("Street_Address");
					this.OnStreet_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuarterID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string QuarterID
		{
			get
			{
				return this._QuarterID;
			}
			set
			{
				if ((this._QuarterID != value))
				{
					this.OnQuarterIDChanging(value);
					this.SendPropertyChanging();
					this._QuarterID = value;
					this.SendPropertyChanged("QuarterID");
					this.OnQuarterIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProductID;
		
		private string _ProductName;
		
		private string _Product_description;
		
		private string _BrandID;
		
		private string _Color;
		
		private string _Size;
		
		private System.DateTime _Manufacture_date;
		
		private System.DateTime _Product_Expired_date;
		
		private string _Manufacture_Country;
		
		private System.DateTime _Expired_date;
		
		private System.DateTime _Inserted_date;
		
		private string _CategoryID;
		
		private string _SupplierID;
		
		private decimal _UnitPrice;
		
		private string _UMID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnProduct_descriptionChanging(string value);
    partial void OnProduct_descriptionChanged();
    partial void OnBrandIDChanging(string value);
    partial void OnBrandIDChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnManufacture_dateChanging(System.DateTime value);
    partial void OnManufacture_dateChanged();
    partial void OnProduct_Expired_dateChanging(System.DateTime value);
    partial void OnProduct_Expired_dateChanged();
    partial void OnManufacture_CountryChanging(string value);
    partial void OnManufacture_CountryChanged();
    partial void OnExpired_dateChanging(System.DateTime value);
    partial void OnExpired_dateChanged();
    partial void OnInserted_dateChanging(System.DateTime value);
    partial void OnInserted_dateChanged();
    partial void OnCategoryIDChanging(string value);
    partial void OnCategoryIDChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnUMIDChanging(string value);
    partial void OnUMIDChanged();
    #endregion
		
		public product()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Product_description
		{
			get
			{
				return this._Product_description;
			}
			set
			{
				if ((this._Product_description != value))
				{
					this.OnProduct_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Product_description = value;
					this.SendPropertyChanged("Product_description");
					this.OnProduct_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="Char(36) NOT NULL", CanBeNull=false)]
		public string BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacture_date", DbType="DateTime NOT NULL")]
		public System.DateTime Manufacture_date
		{
			get
			{
				return this._Manufacture_date;
			}
			set
			{
				if ((this._Manufacture_date != value))
				{
					this.OnManufacture_dateChanging(value);
					this.SendPropertyChanging();
					this._Manufacture_date = value;
					this.SendPropertyChanged("Manufacture_date");
					this.OnManufacture_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Expired_date", DbType="DateTime NOT NULL")]
		public System.DateTime Product_Expired_date
		{
			get
			{
				return this._Product_Expired_date;
			}
			set
			{
				if ((this._Product_Expired_date != value))
				{
					this.OnProduct_Expired_dateChanging(value);
					this.SendPropertyChanging();
					this._Product_Expired_date = value;
					this.SendPropertyChanged("Product_Expired_date");
					this.OnProduct_Expired_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacture_Country", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Manufacture_Country
		{
			get
			{
				return this._Manufacture_Country;
			}
			set
			{
				if ((this._Manufacture_Country != value))
				{
					this.OnManufacture_CountryChanging(value);
					this.SendPropertyChanging();
					this._Manufacture_Country = value;
					this.SendPropertyChanged("Manufacture_Country");
					this.OnManufacture_CountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expired_date", DbType="DateTime NOT NULL")]
		public System.DateTime Expired_date
		{
			get
			{
				return this._Expired_date;
			}
			set
			{
				if ((this._Expired_date != value))
				{
					this.OnExpired_dateChanging(value);
					this.SendPropertyChanging();
					this._Expired_date = value;
					this.SendPropertyChanged("Expired_date");
					this.OnExpired_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inserted_date", DbType="DateTime NOT NULL")]
		public System.DateTime Inserted_date
		{
			get
			{
				return this._Inserted_date;
			}
			set
			{
				if ((this._Inserted_date != value))
				{
					this.OnInserted_dateChanging(value);
					this.SendPropertyChanging();
					this._Inserted_date = value;
					this.SendPropertyChanged("Inserted_date");
					this.OnInserted_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Char(36) NOT NULL", CanBeNull=false)]
		public string CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Char(36) NOT NULL", CanBeNull=false)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UMID", DbType="Char(36) NOT NULL", CanBeNull=false)]
		public string UMID
		{
			get
			{
				return this._UMID;
			}
			set
			{
				if ((this._UMID != value))
				{
					this.OnUMIDChanging(value);
					this.SendPropertyChanging();
					this._UMID = value;
					this.SendPropertyChanged("UMID");
					this.OnUMIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product_history")]
	public partial class product_history : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProductID;
		
		private string _ProductName;
		
		private string _Product_image;
		
		private string _Product_Description;
		
		private string _Product_imageID;
		
		private string _Category;
		
		private string _BrandName;
		
		private string _BrandID;
		
		private string _Color;
		
		private string _Size;
		
		private string _Purchase_price;
		
		private System.DateTime _Manufacture_date;
		
		private System.DateTime _Product_Expired_date;
		
		private System.DateTime _Manufacture_Country;
		
		private System.DateTime _Inserted_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnProduct_imageChanging(string value);
    partial void OnProduct_imageChanged();
    partial void OnProduct_DescriptionChanging(string value);
    partial void OnProduct_DescriptionChanged();
    partial void OnProduct_imageIDChanging(string value);
    partial void OnProduct_imageIDChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnBrandIDChanging(string value);
    partial void OnBrandIDChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnPurchase_priceChanging(string value);
    partial void OnPurchase_priceChanged();
    partial void OnManufacture_dateChanging(System.DateTime value);
    partial void OnManufacture_dateChanged();
    partial void OnProduct_Expired_dateChanging(System.DateTime value);
    partial void OnProduct_Expired_dateChanged();
    partial void OnManufacture_CountryChanging(System.DateTime value);
    partial void OnManufacture_CountryChanged();
    partial void OnInserted_dateChanging(System.DateTime value);
    partial void OnInserted_dateChanged();
    #endregion
		
		public product_history()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_image", DbType="VarChar(200)")]
		public string Product_image
		{
			get
			{
				return this._Product_image;
			}
			set
			{
				if ((this._Product_image != value))
				{
					this.OnProduct_imageChanging(value);
					this.SendPropertyChanging();
					this._Product_image = value;
					this.SendPropertyChanged("Product_image");
					this.OnProduct_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Product_Description
		{
			get
			{
				return this._Product_Description;
			}
			set
			{
				if ((this._Product_Description != value))
				{
					this.OnProduct_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Product_Description = value;
					this.SendPropertyChanged("Product_Description");
					this.OnProduct_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_imageID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Product_imageID
		{
			get
			{
				return this._Product_imageID;
			}
			set
			{
				if ((this._Product_imageID != value))
				{
					this.OnProduct_imageIDChanging(value);
					this.SendPropertyChanging();
					this._Product_imageID = value;
					this.SendPropertyChanged("Product_imageID");
					this.OnProduct_imageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purchase_price", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Purchase_price
		{
			get
			{
				return this._Purchase_price;
			}
			set
			{
				if ((this._Purchase_price != value))
				{
					this.OnPurchase_priceChanging(value);
					this.SendPropertyChanging();
					this._Purchase_price = value;
					this.SendPropertyChanged("Purchase_price");
					this.OnPurchase_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacture_date", DbType="DateTime NOT NULL")]
		public System.DateTime Manufacture_date
		{
			get
			{
				return this._Manufacture_date;
			}
			set
			{
				if ((this._Manufacture_date != value))
				{
					this.OnManufacture_dateChanging(value);
					this.SendPropertyChanging();
					this._Manufacture_date = value;
					this.SendPropertyChanged("Manufacture_date");
					this.OnManufacture_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Expired_date", DbType="DateTime NOT NULL")]
		public System.DateTime Product_Expired_date
		{
			get
			{
				return this._Product_Expired_date;
			}
			set
			{
				if ((this._Product_Expired_date != value))
				{
					this.OnProduct_Expired_dateChanging(value);
					this.SendPropertyChanging();
					this._Product_Expired_date = value;
					this.SendPropertyChanged("Product_Expired_date");
					this.OnProduct_Expired_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacture_Country", DbType="DateTime NOT NULL")]
		public System.DateTime Manufacture_Country
		{
			get
			{
				return this._Manufacture_Country;
			}
			set
			{
				if ((this._Manufacture_Country != value))
				{
					this.OnManufacture_CountryChanging(value);
					this.SendPropertyChanging();
					this._Manufacture_Country = value;
					this.SendPropertyChanged("Manufacture_Country");
					this.OnManufacture_CountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inserted_date", DbType="DateTime NOT NULL")]
		public System.DateTime Inserted_date
		{
			get
			{
				return this._Inserted_date;
			}
			set
			{
				if ((this._Inserted_date != value))
				{
					this.OnInserted_dateChanging(value);
					this.SendPropertyChanging();
					this._Inserted_date = value;
					this.SendPropertyChanged("Inserted_date");
					this.OnInserted_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product_image")]
	public partial class product_image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Product_imageID;
		
		private System.Data.Linq.Binary _Images;
		
		private string _ProductID;
		
		private System.Data.Linq.Binary _MainPic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_imageIDChanging(string value);
    partial void OnProduct_imageIDChanged();
    partial void OnImagesChanging(System.Data.Linq.Binary value);
    partial void OnImagesChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnMainPicChanging(System.Data.Linq.Binary value);
    partial void OnMainPicChanged();
    #endregion
		
		public product_image()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_imageID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Product_imageID
		{
			get
			{
				return this._Product_imageID;
			}
			set
			{
				if ((this._Product_imageID != value))
				{
					this.OnProduct_imageIDChanging(value);
					this.SendPropertyChanging();
					this._Product_imageID = value;
					this.SendPropertyChanged("Product_imageID");
					this.OnProduct_imageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Images", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				if ((this._Images != value))
				{
					this.OnImagesChanging(value);
					this.SendPropertyChanging();
					this._Images = value;
					this.SendPropertyChanged("Images");
					this.OnImagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Char(36) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainPic", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary MainPic
		{
			get
			{
				return this._MainPic;
			}
			set
			{
				if ((this._MainPic != value))
				{
					this.OnMainPicChanging(value);
					this.SendPropertyChanging();
					this._MainPic = value;
					this.SendPropertyChanged("MainPic");
					this.OnMainPicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product_image1")]
	public partial class product_image1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Product_imageID;
		
		private System.Data.Linq.Binary _Images;
		
		private string _ProductID;
		
		private bool _MainPic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_imageIDChanging(string value);
    partial void OnProduct_imageIDChanged();
    partial void OnImagesChanging(System.Data.Linq.Binary value);
    partial void OnImagesChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnMainPicChanging(bool value);
    partial void OnMainPicChanged();
    #endregion
		
		public product_image1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_imageID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Product_imageID
		{
			get
			{
				return this._Product_imageID;
			}
			set
			{
				if ((this._Product_imageID != value))
				{
					this.OnProduct_imageIDChanging(value);
					this.SendPropertyChanging();
					this._Product_imageID = value;
					this.SendPropertyChanged("Product_imageID");
					this.OnProduct_imageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Images", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				if ((this._Images != value))
				{
					this.OnImagesChanging(value);
					this.SendPropertyChanging();
					this._Images = value;
					this.SendPropertyChanged("Images");
					this.OnImagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Char(36) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainPic", DbType="Bit NOT NULL")]
		public bool MainPic
		{
			get
			{
				return this._MainPic;
			}
			set
			{
				if ((this._MainPic != value))
				{
					this.OnMainPicChanging(value);
					this.SendPropertyChanging();
					this._MainPic = value;
					this.SendPropertyChanged("MainPic");
					this.OnMainPicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purchase")]
	public partial class Purchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PurchaseID;
		
		private string _ProductID;
		
		private string _Quantity;
		
		private string _Supplier;
		
		private System.DateTime _Purchase_Order_Date;
		
		private System.DateTime _Last_Order_Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseIDChanging(string value);
    partial void OnPurchaseIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnQuantityChanging(string value);
    partial void OnQuantityChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnPurchase_Order_DateChanging(System.DateTime value);
    partial void OnPurchase_Order_DateChanged();
    partial void OnLast_Order_DateChanging(System.DateTime value);
    partial void OnLast_Order_DateChanged();
    #endregion
		
		public Purchase()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PurchaseID
		{
			get
			{
				return this._PurchaseID;
			}
			set
			{
				if ((this._PurchaseID != value))
				{
					this.OnPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseID = value;
					this.SendPropertyChanged("PurchaseID");
					this.OnPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purchase_Order_Date", DbType="Date NOT NULL")]
		public System.DateTime Purchase_Order_Date
		{
			get
			{
				return this._Purchase_Order_Date;
			}
			set
			{
				if ((this._Purchase_Order_Date != value))
				{
					this.OnPurchase_Order_DateChanging(value);
					this.SendPropertyChanging();
					this._Purchase_Order_Date = value;
					this.SendPropertyChanged("Purchase_Order_Date");
					this.OnPurchase_Order_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Order_Date", DbType="Date NOT NULL")]
		public System.DateTime Last_Order_Date
		{
			get
			{
				return this._Last_Order_Date;
			}
			set
			{
				if ((this._Last_Order_Date != value))
				{
					this.OnLast_Order_DateChanging(value);
					this.SendPropertyChanging();
					this._Last_Order_Date = value;
					this.SendPropertyChanged("Last_Order_Date");
					this.OnLast_Order_DateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quarter")]
	public partial class Quarter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _QuarterID;
		
		private string _Quarter_Name;
		
		private string _Quarter_Description;
		
		private string _TownshipID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuarterIDChanging(string value);
    partial void OnQuarterIDChanged();
    partial void OnQuarter_NameChanging(string value);
    partial void OnQuarter_NameChanged();
    partial void OnQuarter_DescriptionChanging(string value);
    partial void OnQuarter_DescriptionChanged();
    partial void OnTownshipIDChanging(string value);
    partial void OnTownshipIDChanged();
    #endregion
		
		public Quarter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuarterID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string QuarterID
		{
			get
			{
				return this._QuarterID;
			}
			set
			{
				if ((this._QuarterID != value))
				{
					this.OnQuarterIDChanging(value);
					this.SendPropertyChanging();
					this._QuarterID = value;
					this.SendPropertyChanged("QuarterID");
					this.OnQuarterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Quarter Name]", Storage="_Quarter_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Quarter_Name
		{
			get
			{
				return this._Quarter_Name;
			}
			set
			{
				if ((this._Quarter_Name != value))
				{
					this.OnQuarter_NameChanging(value);
					this.SendPropertyChanging();
					this._Quarter_Name = value;
					this.SendPropertyChanged("Quarter_Name");
					this.OnQuarter_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Quarter Description]", Storage="_Quarter_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Quarter_Description
		{
			get
			{
				return this._Quarter_Description;
			}
			set
			{
				if ((this._Quarter_Description != value))
				{
					this.OnQuarter_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Quarter_Description = value;
					this.SendPropertyChanged("Quarter_Description");
					this.OnQuarter_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TownshipID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TownshipID
		{
			get
			{
				return this._TownshipID;
			}
			set
			{
				if ((this._TownshipID != value))
				{
					this.OnTownshipIDChanging(value);
					this.SendPropertyChanging();
					this._TownshipID = value;
					this.SendPropertyChanged("TownshipID");
					this.OnTownshipIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Region")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RegionID;
		
		private string _Region_Name;
		
		private string _Region_Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegionIDChanging(string value);
    partial void OnRegionIDChanged();
    partial void OnRegion_NameChanging(string value);
    partial void OnRegion_NameChanged();
    partial void OnRegion_DescriptionChanging(string value);
    partial void OnRegion_DescriptionChanged();
    #endregion
		
		public Region()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Region Name]", Storage="_Region_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Region_Name
		{
			get
			{
				return this._Region_Name;
			}
			set
			{
				if ((this._Region_Name != value))
				{
					this.OnRegion_NameChanging(value);
					this.SendPropertyChanging();
					this._Region_Name = value;
					this.SendPropertyChanged("Region_Name");
					this.OnRegion_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Region Description]", Storage="_Region_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Region_Description
		{
			get
			{
				return this._Region_Description;
			}
			set
			{
				if ((this._Region_Description != value))
				{
					this.OnRegion_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Region_Description = value;
					this.SendPropertyChanged("Region_Description");
					this.OnRegion_DescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Register")]
	public partial class Register : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _UserName;
		
		private string _NRC;
		
		private System.DateTime _DOB;
		
		private System.Data.Linq.Binary _Picture;
		
		private string _Address;
		
		private string _Gender;
		
		private string _Phone;
		
		private string _Password;
		
		private string _Email;
		
		private System.DateTime _InsertedDate;
		
		private System.DateTime _UpdatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnNRCChanging(string value);
    partial void OnNRCChanged();
    partial void OnDOBChanging(System.DateTime value);
    partial void OnDOBChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnInsertedDateChanging(System.DateTime value);
    partial void OnInsertedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Register()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NRC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NRC
		{
			get
			{
				return this._NRC;
			}
			set
			{
				if ((this._NRC != value))
				{
					this.OnNRCChanging(value);
					this.SendPropertyChanging();
					this._NRC = value;
					this.SendPropertyChanged("NRC");
					this.OnNRCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(2500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertedDate
		{
			get
			{
				return this._InsertedDate;
			}
			set
			{
				if ((this._InsertedDate != value))
				{
					this.OnInsertedDateChanging(value);
					this.SendPropertyChanging();
					this._InsertedDate = value;
					this.SendPropertyChanged("InsertedDate");
					this.OnInsertedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reorder")]
	public partial class Reorder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ReorderID;
		
		private string _ProductID;
		
		private string _InventoryID;
		
		private string _ReorderUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReorderIDChanging(string value);
    partial void OnReorderIDChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnInventoryIDChanging(string value);
    partial void OnInventoryIDChanged();
    partial void OnReorderUnitChanging(string value);
    partial void OnReorderUnitChanged();
    #endregion
		
		public Reorder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ReorderID
		{
			get
			{
				return this._ReorderID;
			}
			set
			{
				if ((this._ReorderID != value))
				{
					this.OnReorderIDChanging(value);
					this.SendPropertyChanging();
					this._ReorderID = value;
					this.SendPropertyChanged("ReorderID");
					this.OnReorderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Char(36)")]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", DbType="Char(36)")]
		public string InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					this.OnInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryID");
					this.OnInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderUnit", DbType="NVarChar(50)")]
		public string ReorderUnit
		{
			get
			{
				return this._ReorderUnit;
			}
			set
			{
				if ((this._ReorderUnit != value))
				{
					this.OnReorderUnitChanging(value);
					this.SendPropertyChanging();
					this._ReorderUnit = value;
					this.SendPropertyChanged("ReorderUnit");
					this.OnReorderUnitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _State_DivisionID;
		
		private string _State_Division_Name;
		
		private string _State_Division_Description;
		
		private string _CountryID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnState_DivisionIDChanging(string value);
    partial void OnState_DivisionIDChanged();
    partial void OnState_Division_NameChanging(string value);
    partial void OnState_Division_NameChanged();
    partial void OnState_Division_DescriptionChanging(string value);
    partial void OnState_Division_DescriptionChanged();
    partial void OnCountryIDChanging(string value);
    partial void OnCountryIDChanged();
    #endregion
		
		public State()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State/DivisionID]", Storage="_State_DivisionID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string State_DivisionID
		{
			get
			{
				return this._State_DivisionID;
			}
			set
			{
				if ((this._State_DivisionID != value))
				{
					this.OnState_DivisionIDChanging(value);
					this.SendPropertyChanging();
					this._State_DivisionID = value;
					this.SendPropertyChanged("State_DivisionID");
					this.OnState_DivisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Division Name]", Storage="_State_Division_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string State_Division_Name
		{
			get
			{
				return this._State_Division_Name;
			}
			set
			{
				if ((this._State_Division_Name != value))
				{
					this.OnState_Division_NameChanging(value);
					this.SendPropertyChanging();
					this._State_Division_Name = value;
					this.SendPropertyChanged("State_Division_Name");
					this.OnState_Division_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[State Division Description]", Storage="_State_Division_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string State_Division_Description
		{
			get
			{
				return this._State_Division_Description;
			}
			set
			{
				if ((this._State_Division_Description != value))
				{
					this.OnState_Division_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._State_Division_Description = value;
					this.SendPropertyChanged("State_Division_Description");
					this.OnState_Division_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubCategory")]
	public partial class SubCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SubCategoryID;
		
		private string _Type;
		
		private string _Description;
		
		private string _CategoryID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubCategoryIDChanging(string value);
    partial void OnSubCategoryIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCategoryIDChanging(string value);
    partial void OnCategoryIDChanged();
    #endregion
		
		public SubCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SubCategoryID
		{
			get
			{
				return this._SubCategoryID;
			}
			set
			{
				if ((this._SubCategoryID != value))
				{
					this.OnSubCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._SubCategoryID = value;
					this.SendPropertyChanged("SubCategoryID");
					this.OnSubCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(200)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Char(36)")]
		public string CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SupplierID;
		
		private string _SupplierName;
		
		private string _SupplierPhoneNo;
		
		private string _SupplierAddress;
		
		private string _SupplierEmail;
		
		private System.DateTime _InsertedDate;
		
		private System.DateTime _UpdatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnSupplierPhoneNoChanging(string value);
    partial void OnSupplierPhoneNoChanged();
    partial void OnSupplierAddressChanging(string value);
    partial void OnSupplierAddressChanged();
    partial void OnSupplierEmailChanging(string value);
    partial void OnSupplierEmailChanged();
    partial void OnInsertedDateChanging(System.DateTime value);
    partial void OnInsertedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Supplier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierPhoneNo", DbType="VarChar(20)")]
		public string SupplierPhoneNo
		{
			get
			{
				return this._SupplierPhoneNo;
			}
			set
			{
				if ((this._SupplierPhoneNo != value))
				{
					this.OnSupplierPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._SupplierPhoneNo = value;
					this.SendPropertyChanged("SupplierPhoneNo");
					this.OnSupplierPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierAddress", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string SupplierAddress
		{
			get
			{
				return this._SupplierAddress;
			}
			set
			{
				if ((this._SupplierAddress != value))
				{
					this.OnSupplierAddressChanging(value);
					this.SendPropertyChanging();
					this._SupplierAddress = value;
					this.SendPropertyChanged("SupplierAddress");
					this.OnSupplierAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierEmail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierEmail
		{
			get
			{
				return this._SupplierEmail;
			}
			set
			{
				if ((this._SupplierEmail != value))
				{
					this.OnSupplierEmailChanging(value);
					this.SendPropertyChanging();
					this._SupplierEmail = value;
					this.SendPropertyChanged("SupplierEmail");
					this.OnSupplierEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertedDate
		{
			get
			{
				return this._InsertedDate;
			}
			set
			{
				if ((this._InsertedDate != value))
				{
					this.OnInsertedDateChanging(value);
					this.SendPropertyChanging();
					this._InsertedDate = value;
					this.SendPropertyChanged("InsertedDate");
					this.OnInsertedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Township")]
	public partial class Township : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TownshipID;
		
		private string _Township_Name;
		
		private string _Township_Description;
		
		private string _CityID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTownshipIDChanging(string value);
    partial void OnTownshipIDChanged();
    partial void OnTownship_NameChanging(string value);
    partial void OnTownship_NameChanged();
    partial void OnTownship_DescriptionChanging(string value);
    partial void OnTownship_DescriptionChanged();
    partial void OnCityIDChanging(string value);
    partial void OnCityIDChanged();
    #endregion
		
		public Township()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TownshipID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TownshipID
		{
			get
			{
				return this._TownshipID;
			}
			set
			{
				if ((this._TownshipID != value))
				{
					this.OnTownshipIDChanging(value);
					this.SendPropertyChanging();
					this._TownshipID = value;
					this.SendPropertyChanged("TownshipID");
					this.OnTownshipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Township Name]", Storage="_Township_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Township_Name
		{
			get
			{
				return this._Township_Name;
			}
			set
			{
				if ((this._Township_Name != value))
				{
					this.OnTownship_NameChanging(value);
					this.SendPropertyChanging();
					this._Township_Name = value;
					this.SendPropertyChanged("Township_Name");
					this.OnTownship_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Township Description]", Storage="_Township_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Township_Description
		{
			get
			{
				return this._Township_Description;
			}
			set
			{
				if ((this._Township_Description != value))
				{
					this.OnTownship_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Township_Description = value;
					this.SendPropertyChanged("Township_Description");
					this.OnTownship_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnitOfMeasure")]
	public partial class UnitOfMeasure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UMID;
		
		private string _UMDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUMIDChanging(string value);
    partial void OnUMIDChanged();
    partial void OnUMDescriptionChanging(string value);
    partial void OnUMDescriptionChanged();
    #endregion
		
		public UnitOfMeasure()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UMID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UMID
		{
			get
			{
				return this._UMID;
			}
			set
			{
				if ((this._UMID != value))
				{
					this.OnUMIDChanging(value);
					this.SendPropertyChanging();
					this._UMID = value;
					this.SendPropertyChanged("UMID");
					this.OnUMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UMDescription", DbType="VarChar(300)")]
		public string UMDescription
		{
			get
			{
				return this._UMDescription;
			}
			set
			{
				if ((this._UMDescription != value))
				{
					this.OnUMDescriptionChanging(value);
					this.SendPropertyChanging();
					this._UMDescription = value;
					this.SendPropertyChanged("UMDescription");
					this.OnUMDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BK_Product")]
	public partial class BK_Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BK_ProductID;
		
		private string _BK_ProductName;
		
		private decimal _BK_Price;
		
		private string _UMID;
		
		private string _CategoryID;
		
		private System.DateTime _InsertedDate;
		
		private System.DateTime _UpdatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBK_ProductIDChanging(string value);
    partial void OnBK_ProductIDChanged();
    partial void OnBK_ProductNameChanging(string value);
    partial void OnBK_ProductNameChanged();
    partial void OnBK_PriceChanging(decimal value);
    partial void OnBK_PriceChanged();
    partial void OnUMIDChanging(string value);
    partial void OnUMIDChanged();
    partial void OnCategoryIDChanging(string value);
    partial void OnCategoryIDChanged();
    partial void OnInsertedDateChanging(System.DateTime value);
    partial void OnInsertedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public BK_Product()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BK_ProductID", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BK_ProductID
		{
			get
			{
				return this._BK_ProductID;
			}
			set
			{
				if ((this._BK_ProductID != value))
				{
					this.OnBK_ProductIDChanging(value);
					this.SendPropertyChanging();
					this._BK_ProductID = value;
					this.SendPropertyChanged("BK_ProductID");
					this.OnBK_ProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BK_ProductName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string BK_ProductName
		{
			get
			{
				return this._BK_ProductName;
			}
			set
			{
				if ((this._BK_ProductName != value))
				{
					this.OnBK_ProductNameChanging(value);
					this.SendPropertyChanging();
					this._BK_ProductName = value;
					this.SendPropertyChanged("BK_ProductName");
					this.OnBK_ProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BK_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal BK_Price
		{
			get
			{
				return this._BK_Price;
			}
			set
			{
				if ((this._BK_Price != value))
				{
					this.OnBK_PriceChanging(value);
					this.SendPropertyChanging();
					this._BK_Price = value;
					this.SendPropertyChanged("BK_Price");
					this.OnBK_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UMID", DbType="Char(36) NOT NULL", CanBeNull=false)]
		public string UMID
		{
			get
			{
				return this._UMID;
			}
			set
			{
				if ((this._UMID != value))
				{
					this.OnUMIDChanging(value);
					this.SendPropertyChanging();
					this._UMID = value;
					this.SendPropertyChanged("UMID");
					this.OnUMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Char(36) NOT NULL", CanBeNull=false)]
		public string CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedDate", DbType="Date NOT NULL")]
		public System.DateTime InsertedDate
		{
			get
			{
				return this._InsertedDate;
			}
			set
			{
				if ((this._InsertedDate != value))
				{
					this.OnInsertedDateChanging(value);
					this.SendPropertyChanging();
					this._InsertedDate = value;
					this.SendPropertyChanged("InsertedDate");
					this.OnInsertedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="Date NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
